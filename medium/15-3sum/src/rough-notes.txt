
- find a subset of given array (`nums`) such that the sum of the subarray is 0 under the following conditions:
    - each indice is unique

Contrainst:
    - length: [3, 3000]
    - elem vals: [-10^5, 10^5]


Plan:
    - Firstly, all we need to do is keep sets of indicies
    - Idea 1:
        - only way i can think of right now is some cubic time things....
        - start with index 0 & 1 then cycle trhough remaing indicies 2 -> N
        - then move to index 0 & 2 then cycle through again....

    - Idea 2:
        - Will sorting help?
        - gonna check on scrap paper
        - doesn't seem to work
    - Going to resort to idea 1
    - any idea is better than no idea right?
    


    - Got things working but im getting duplicate triplets
    - think im gonna do some postprocessing 
    - nah fuck post proccessing
    - gonna sort each array on insertion, then each one that wants to come in must be sorted and can then be compared to others

    - damn, i think my solution works but its so slow that it exceeds the time limit :skull:
    - uhhh, need a better solution i suppose
    - damn, idk bro
    - COME BACK TO THIS!!!
